{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luca\\\\TestReact\\\\simple-mern-project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n//LD \"useState\" in an hook that tells to react to re-render any time content change\n// we have setup \"useEffect\"(see below) to launch only when the application launches.\n\nimport Header from './components/Header/Header';\nimport NewProduct from './components/Products/NewProduct';\nimport ProductList from './components/Products/ProductList';\nimport GoalList from './components/GoalList/GoalList';\nimport NewGoal from './components/NewGoal/NewGoal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loadedProducts, setLoadedProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5000/products');\n      const responseData = await response.json();\n\n      //LD I set the constant \"LoadedProducts\" declared above. So I do invoke \"setLoadedProducts\"\n      setLoadedProducts(responseData.products);\n      setIsLoading(false);\n    };\n    fetchProducts();\n  }, []);\n  const addProductHandler = async (productName, productPrice) => {\n    try {\n      const newProduct = {\n        title: productName,\n        price: +productPrice // \"+\" to convert string to number\n      };\n\n      let hasError = false;\n      const response = await fetch('http://localhost:5000/product', {\n        method: 'POST',\n        body: JSON.stringify(newProduct),\n        headers: {\n          //LD letting BE know that we are sending Json data\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        hasError = true;\n      }\n      const responseData = await response.json();\n      if (hasError) {\n        throw new Error(responseData.message);\n      }\n      setLoadedProducts(prevProducts => {\n        return prevProducts.concat({\n          ...newProduct,\n          id: responseData.product.id\n        });\n      });\n    } catch (error) {\n      alert(error.message || 'Something went wrong!');\n    }\n  };\n\n  //we will give those in input to \"GoalList.js\" \n  const courseGoals = [{\n    id: 'cg1',\n    text: 'Finish the Course'\n  }, {\n    id: 'cg2',\n    text: 'Learn all about the Course Main Topic'\n  }, {\n    id: 'cg3',\n    text: 'Help other students in the Course Q&A'\n  }];\n  const addNewGoalHandler = newGoal => {\n    //getting the \"newGoal\"\n    courseGoals.push(newGoal);\n    console.log(courseGoals);\n  };\n\n  //LD the below jsx is translated in javascript\n  // where \"Header\", \"NewProduct\", \"ProductList\" are react component/\n  // the components are imported on the top of this file. Folder \"Components\"\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"a list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(GoalList, {\n            goals: courseGoals\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(NewGoal, {\n          onAddGoal: addNewGoalHandler,\n          l: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewProduct, {\n        onAddProduct: addProductHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loader\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 23\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(ProductList, {\n        items: loadedProducts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZZnZUsozVEShi7/RQB+SfDAmt+c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","NewProduct","ProductList","GoalList","NewGoal","jsxDEV","_jsxDEV","App","_s","loadedProducts","setLoadedProducts","isLoading","setIsLoading","fetchProducts","response","fetch","responseData","json","products","addProductHandler","productName","productPrice","newProduct","title","price","hasError","method","body","JSON","stringify","headers","ok","Error","message","prevProducts","concat","id","product","error","alert","courseGoals","text","addNewGoalHandler","newGoal","push","console","log","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","goals","onAddGoal","l","onAddProduct","className","items","_c","$RefreshReg$"],"sources":["C:/Users/Luca/TestReact/simple-mern-project/frontend/src/App.js"],"sourcesContent":["\n \nimport React, { useState, useEffect } from 'react';\n//LD \"useState\" in an hook that tells to react to re-render any time content change\n// we have setup \"useEffect\"(see below) to launch only when the application launches.\n\nimport Header from './components/Header/Header';\nimport NewProduct from './components/Products/NewProduct';\nimport ProductList from './components/Products/ProductList';\n\nimport GoalList from './components/GoalList/GoalList';\nimport NewGoal from './components/NewGoal/NewGoal';\n\n\nimport './App.css';\n\nfunction App() {\n  const [loadedProducts, setLoadedProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5000/products');\n\n      const responseData = await response.json();\n\n      //LD I set the constant \"LoadedProducts\" declared above. So I do invoke \"setLoadedProducts\"\n      setLoadedProducts(responseData.products);\n      setIsLoading(false);\n    };\n\n    fetchProducts();\n  }, []);\n\n  const addProductHandler = async (productName, productPrice) => {\n    try {\n      const newProduct = {\n        title: productName,\n        price: +productPrice // \"+\" to convert string to number\n      };\n      let hasError = false;\n      const response = await fetch('http://localhost:5000/product', {\n        method: 'POST',\n        body: JSON.stringify(newProduct),\n        headers: { //LD letting BE know that we are sending Json data\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        hasError = true;\n      }\n\n      const responseData = await response.json();\n\n      if (hasError) {\n        throw new Error(responseData.message);\n      }\n\n      setLoadedProducts(prevProducts => {\n        return prevProducts.concat({\n          ...newProduct,\n          id: responseData.product.id\n        });\n      });\n    } catch (error) {\n      alert(error.message || 'Something went wrong!');\n    }\n  };\n\n  //we will give those in input to \"GoalList.js\" \n  const courseGoals = [\n    {id: 'cg1', text: 'Finish the Course'},\n    {id: 'cg2', text: 'Learn all about the Course Main Topic'},\n    {id: 'cg3', text: 'Help other students in the Course Q&A'},\n  ];\n\n  const addNewGoalHandler = newGoal => { //getting the \"newGoal\"\n    courseGoals.push(newGoal);\n    console.log(courseGoals);\n  };\n\n\n  //LD the below jsx is translated in javascript\n  // where \"Header\", \"NewProduct\", \"ProductList\" are react component/\n  // the components are imported on the top of this file. Folder \"Components\"\n  return (\n    <React.Fragment>\n      {/* //LD I pass an array to \"GoalList\" as prop in order to dynamically render */}\n      {/* //LD I pass \"addNewGoalHandler\" to the prop \"onAddGoal\" of component \"NewGoal\" */}\n      <Header />\n      <main>\n        <div> \n          <h2>a list</h2>\n          <ul>\n          <GoalList goals={courseGoals} /> \n          </ul>\n        </div>\n        <div>\n          <NewGoal onAddGoal={addNewGoalHandler}l/>\n        </div>\n        <NewProduct onAddProduct={addProductHandler} />\n        {isLoading && <p className=\"loader\">Loading...</p>}\n        {!isLoading && <ProductList items={loadedProducts} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}